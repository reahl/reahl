# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Build reahl-dev:latest docker image
        run: docker build --target build-image -t reahl-dev:latest

      - name: Extract built wheels
        run: |
          docker run --rm -v /tmp/wheels:/tmp/wheels reahl-dev:latest "cp -a /home/developer/.reahlworkspace/dist-egg /tmp/wheels"
          ls -laR /tmp/wheels

      - name: Upload built wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: /tmp/wheels


  test:
    needs: build
    runs-on:  ubuntu-20.04
    container:
      image:  ubuntu:20.04
    services:
      postgres:
        image: postgres:12.3
        env:
          POSTGRES_PASSWORD: reahl
          POSTGRES_USER: developer
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Download wheels
        uses: actions/download-artifact@v2
        with:
          name: wheels
          path: ~/.reahlworkspace/dist-egg
      - name: check wheels
        run: ls -la /tmp/wheels

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Check docker images
        run: |
          pwd
          ./scripts/installDebs.sh
          ./scripts/setupDevEnv.sh
          cat ~/.pip/pip.conf
          pip install --pre reahl[dev]
          reahl createdb -U postgres reahl-web/etc
          (reahl shell -sdXg tox && (EXITCODE=$?; shred -f $HOME/.gnupg/*; exit $EXITCODE))
