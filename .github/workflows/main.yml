# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Build reahl-dev:latest docker image
        run: docker build --target build-image -t reahl-dev:latest -f Dockerfile .

      - name: Extract built wheels
        run: docker cp $(docker create --rm reahl-dev:latest):/home/developer/.reahlworkspace/dist-egg/ /tmp/wheels

      - name: Upload built wheels to cache
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: /tmp/wheels


  test:
    needs: build
    runs-on:  ubuntu-20.04
    container: ubuntu:20.04
    strategy:
      matrix:
        python-version: [ '3.8' ]
    services:
      postgres:
        image: postgres:12.3
        env:
          POSTGRES_PASSWORD: reahl
          POSTGRES_USER: developer
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download wheels
        uses: actions/download-artifact@v2
        with:
          name: wheels
          path: ~/.reahlworkspace/dist-egg

      - name: Setup Test env
        run: |
          ./scripts/installDebs.sh
          ./scripts/installDevEnvDebs.sh
          ./scripts/setupDevEnv.sh

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Upgrade Pip version (does not work needs SSL)
        run: python -m pip install --upgrade pip
      - name: Display Pip version
        run: python -m pip --version
      - name: Display Pip version
        run: which pip
      - name: Check shell
        run: echo "=== $SHELL ==="
      - name: Check pip.conf
        run: cat $HOME/.pip/pip.conf
      - name: Show env 1
        run: set
      - name: Show env 2
        run: |
          echo "==================== show python =================="
          which python
          echo "==================== show python3 =================="
          which python3 || "true"
          echo "==================== show pip3 =================="
          which pip3 || "true"
          echo "==================== show pip =================="
          which pip || "true"
          echo "==================== show profile =================="
          cat $HOME/.profile
          echo "==================== show end =================="
      - name: Check python  for runner
        run: ls -la $RUNNER_TOOL_CACHE/Python/
      - name: Check something 1
        run: . $HOME/.profile && pwd
      - name: Check something 1
        run: . $HOME/.profile && find ./ -name .reahlproject
      - name: Check something 1
        run: . $HOME/.profile && reahl refresh
      - name: Check reahl list all
        run: . $HOME/.profile && reahl list -a
      - name: Check something 2
        run: . $HOME/.profile && reahl select -a

      - name: Install reahl-dev
        run: pip install --pre reahl[declarative,postgresql,dev]
      - name: Create db user for Tests
        run: . $HOME/.profile && reahl createdbuser -U developer reahl-web/etc
      - name: Create db for Tests
        run: . $HOME/.profile && reahl createdb -U developer reahl-web/etc
      - name: Run Tests
        run: . $HOME/.profile && reahl shell -sdXg tox && (EXITCODE=$?; shred -f $HOME/.gnupg/*; exit $EXITCODE)
