name: Release

on:
  release:
    types:
      [created]

  workflow_dispatch:

jobs:
  call_build:
    uses: ./.github/workflows/build.yml

  deploy:
    needs: call_build
    environment: release-builds
    env:
      SECURE_ENV_VARS: ${{ secrets.SECURE_ENV_VARS }}
      GPG_KEY:         ${{ secrets.GPG_KEY }}
      GPG_KEY_ID:      ${{ secrets.GPG_KEY_ID }}
      GPG_KEY_TRUST:   ${{ secrets.GPG_KEY_TRUST }}
      GPG_PASSPHRASE:  ${{ secrets.GPG_PASSPHRASE }}
      TWINE_USERNAME:  ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD:  ${{ secrets.TWINE_PASSWORD }}
    runs-on:  ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: python -m pip install --upgrade pip packaging

      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: ~/.reahlworkspace/dist-egg

      - name: Setup Test env
        run: |
          sudo ./scripts/installDebs.sh
          sudo ./scripts/installDevEnvDebs.sh
          ./scripts/setupDevEnv.sh

      - name: Install reahl
        run: pip install --pre reahl-dev reahl-commands #uses wheels as specified in $HOME/.pip/pip.conf

      - name: Select all reahl projects
        run: . $HOME/.profile && reahl refresh $GITHUB_WORKSPACE && reahl select -a

      - name: Sign all wheels
        run: |
          . $HOME/.profile && reahl sign -sdX

      - name: Extract signed wheels
        run: cp -a /home/runner/.reahlworkspace/dist-egg/ /tmp/signedwheels

      - name: Upload signed wheels to cache
        uses: actions/upload-artifact@v3
        with:
          name: signedwheels
          path: /tmp/signedwheels

      - name: Publish
        run: |
          ls -la /home/runner/.reahlworkspace/dist-egg/
          . $HOME/.profile && ./scripts/configurePypi.sh && reahl upload -sdX

      - name: Cleanup
        if: ${{ always() }}
        run: |
          find $HOME/.gnupg/ -type f -exec shred -fu {} \;
